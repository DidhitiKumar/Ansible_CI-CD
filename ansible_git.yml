---
- name: Install OpenJdk
  hosts: localhost
  strategy: free
  gather_facts: no
  become: true
  vars:
    jdk_dir: openjdk-12.0.1_linux-x64_bin
    jdk_archive: openjdk-12.0.1_linux-x64_bin.tar.gz
    jdk_local_dir: jdk-12.0.1
    download_folder: /opt/oracle/java
    bin_dir: /usr/bin
    profile_path: /etc/profile.d
    java_name: "{{ download_folder }}/{{ jdk_local_dir }}"
    java_archive: "{{ download_folder }}/{{ jdk_archive }}"
    download_url: https://download.java.net/java/GA/jdk12.0.1/69cfe15208a647278a19ef0990eea691/12/GPL/openjdk-12.0.1_linux-x64_bin.tar.gz
   # java_version: 12
   # java_subversion: 0
   # java_build_custom: 1
   # jdk_version_detail_custom: "{{ java_version }}u{{ java_subversion }}-b{{ java_build_custom }}"
   # jdk_tarball_hash: d54c1d3a095b4ff2b6607d096fa80163
   # jdk_tarball_url: "http://download.oracle.com/otn-pub/java/jdk/{{ jdk_version_detail_custom }}/{{ jdk_tarball_hash }}/{{ jdk_archive }}"

  tasks:
  - name: Create Directory structure
    command: mkdir -p {{download_folder}}
    command: mkdir -p {{java_name}}

  - name: Download Java
    get_url: url={{ download_url }}  dest={{ java_archive }} headers="Cookie:' gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie'" validate_certs=no owner=root group=root mode=744

  - name: Unpack archive
   # command: "tar -xzvf {{java_archive}} -C {{download_folder}} creates={{java_name}}"
    action: shell tar -xzvf {{java_archive}} -C {{download_folder}}

  - name: Fix ownership
    file: state=directory path={{java_name}} owner=root group=root recurse=yes
  
  - name: Set systemwide oracle env file under /etc/profile.d/
    set_fact: remote_file_path={{profile_path}}/oracle_jdk.sh

  # Create a blank file
  - name: Create a new file {{profile_path}}/oracle_jdk.sh
    file: path={{remote_file_path}} state=touch

  # Check remote file
  - stat: path={{remote_file_path}}
    register: file_path

  # Write file content in file_content variable
  - set_fact: file_content=""

  # If file exist then copy content in remote file.
  - copy: content={{file_content}} dest={{remote_file_path}}
    when: file_path.stat.exists == true   
    
  # Copy /etc/profile.d/oracle_jdk.sh with content
    
  - copy:
      content: |
                #!/bin/bash                
                export JAVA_HOME={{ java_name }}          
                export PATH=$PATH:{{ java_name }}/bin
      dest: /etc/profile.d/oracle_jdk.sh

  # Fix the executable permission
  - name: Set executable perission
    file: path={{profile_path}}/oracle_jdk.sh owner=root group=root mode=0555 state=file recurse=no

  # Export the env on th fly to make system wide change
  - name: Source the file {{profile_path}}/oracle_jdk.sh
    action: shell source /etc/profile
    
- name: Install Maven
  hosts: localhost
  become: yes
  strategy: free
  gather_facts: no
  tasks:
  - name: Create /opt directory
    file: path=/opt state=directory
  
  - name: Download Maven3
    get_url: dest=/opt/apache-maven-3.8.5-bin.tar.gz url=http://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
  
  - name: Unpack Maven3
    action: command creates=/opt/maven chdir=/opt tar zxvf /opt/apache-maven-3.8.5-bin.tar.gz warn=False

  - name: Create Maven3 directory link
    file: path=/opt/maven src=/opt/apache-maven-3.8.5 state=link
  
  - name: Set mvn link
    action: command update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 1
    
  - name: Export Maven Path
    shell: export PATH=/opt/apache-maven-3.8.5/bin:$PATH
    
  - name: echo PATH
    shell: echo $PATH
    
  - name: Remove Maven3 archive
    file: path=/opt/apache-maven-3.8.5-bin.tar.gz state=absent
    
  - name: Clone a github repository
    git:
      #repo: https://github.com/DidhitiKumar/Ansible_CI-CD.git
      repo: https://github.ibm.com/Boomerang-Delivery/queuedepthmonitoring.git
      dest: /var/lib/awx/projects/automation
      clone: yes
      update: yes
  #- name: Run maven install
   # shell: "mvn clean install"
